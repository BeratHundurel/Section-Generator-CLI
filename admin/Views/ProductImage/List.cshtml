@model PaginatedList<ProductImage>
@inject IUnitOfWork _uow

@{
    ViewData["Title"] = "Ürün Fotoğrafları Listesi";
}

@await Component.InvokeAsync("Breadcrumb", new BreadcrumbViewModel { Title = "Ürün Fotoğrafları Listesi" })

<div class="card">
    <div class="card-body">
        <div class="card-title">
            <h4 class="mb-0">Ürün Fotoğrafları</h4>
        </div>
        <hr />
        <div class="table-responsive">
            <table id="dataTable" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th class="text-center info"><span class="mr-2">Tümü</span><input type="checkbox" class="table_select__checkbox_all"></th>
                        <th>Ürün Başlık</th>
                        <th>Fotoğraf</th>
                        <th class="noExport">İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var media = _uow.Media.GetById(item.MediaId);
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" class="table_select__checkbox" value="1">
                            </td>
                            <td>@_uow.Product.GetById(item.ProductId).Name</td>
                            <td>
                                <a target="_blank" class="btn btn-danger" href="@media.Path">Fotoğrafa Git</a>
                            </td>
                            <td>
                                @await Component.InvokeAsync("Link", new { viewName = "Default", vm = new LinkViewModel { Title = "Güncelle", Href = "/admin/productimage/manage/" + item.Id } })
                                @await Component.InvokeAsync("Link", new { viewName = "Delete", vm = new LinkViewModel { Title = "Sil", DataId = item.Id, DataUrl = "/admin/productimage/delete" } })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            @await Component.InvokeAsync("Link", new { viewName = "Default", vm = new LinkViewModel { Title = "Yeni Ekle", Href = "/admin/" + ViewContext.RouteData.Values["controller"].ToString() + "/manage?productId=" + ViewBag.ProductId } })
            <div class="pagination-button">
                @{
                    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.NextPage ? "disabled" : "";
                }
                <a asp-action="list" asp-route-pageNumber="@(Model.PageIndex - 1)"
                   class="btn btn-secondary @prevDisabled">Geri</a>
                <a asp-action="list" asp-route-pageNumber="@(Model.PageIndex + 1)"
                   class="btn btn-secondary @nextDisabled">İleri</a>
            </div>
        </div>
    </div>
</div>

@section libScript{
    <!--Data Tables js-->
    <script src="~/theme/assets/plugins/datatable/js/jquery.dataTables.min.js"></script>
    <script src="~/js/my_lib/list_data_table.js"></script>
    <script src="~/js/my_lib/table_select.js"></script>
}
    @section libStyle{
    <!--Data Tables -->
    <link href="~/theme/assets/plugins/datatable/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css">
    <link href="~/theme/assets/plugins/datatable/css/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css">
}