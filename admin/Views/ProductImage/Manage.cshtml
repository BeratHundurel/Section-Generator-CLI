@model ProductImage
@inject IUnitOfWork _uow
@{
    Product product = _uow.Product.GetById(Convert.ToInt32(Context.Request.Query["productId"]));

    if (product == null)
    {
        product = _uow.Product.GetById(Model.ProductId);
    }
}
<div class="card radius-15">
    <div class="card-body">
        <div class="card-title">
            <h4 class="mb-0">Ürün Fotoğrafı Düzenleme</h4>
        </div>
        <hr />
        <form class="needs-validation" method="post" novalidate>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="ProductId" value="@product.Id" />
            <div class="row">
                <div class="col-12">
                    @if (ViewBag.AlertCode == "not-valid")
                    {
                        <div class="alert alert-danger">
                            Lütfen fotoğraf eklediğinizden emin olun.
                        </div>
                    }
                </div>
                <div class="col-md-12 col-sm-12 form-group">
                    @await Component.InvokeAsync("FileUploadModal",
                        new AdminFileUploadViewModel
                        {
                            FileUploadEntity = new FileUploadEntity
                            {
                                FileAccept = "image/*",
                                FilePath = "/product/sub-image/",
                                Label = "Ürün Fotoğrafı",
                                FileId = 1,
                                FileType = "image",
                                MediaId = Model.MediaId.ToString(),
                                ParamMediaIdName = "MediaId",
                                MediaTitle = Model == null ? "" : product.Name
                            },
                            AdminFileUploadModal = new AdminFileUploadModal
                            {
                                ModalTitle = "Fotoğraf Yükleyin (224x224px Arka Plansız)",

                            }
                        })
                </div>
            </div>
            @await Component.InvokeAsync("ButtonGroup", new { viewName = "Default", vm = new ButtonGroupViewModel { ListControllerName = ViewContext.RouteData.Values["controller"].ToString() } })
        </form>
    </div>
</div>

