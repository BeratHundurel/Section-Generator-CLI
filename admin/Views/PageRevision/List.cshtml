@model PaginatedList<PageRevision>
@inject IUnitOfWork _uow

@section libScript{
    <!--Data Tables js-->
    <script src="~/theme/assets/plugins/datatable/js/jquery.dataTables.min.js"></script>
    <script src="~/js/my_lib/list_data_table.js"></script>
}
@section libStyle{
    <!--Data Tables -->
    <link href="~/theme/assets/plugins/datatable/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css">
    <link href="~/theme/assets/plugins/datatable/css/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css">
}

@await Component.InvokeAsync("Breadcrumb", new BreadcrumbViewModel { Title = "Sayfa Revizyon Listesi" })

<div class="card">
    <div class="card-body">
        <div class="card-title">
            <h4 class="mb-0">Sayfa Revizyonları</h4>
        </div>
        <hr />
        <table class="table table-striped table-hover" id="dataTable">
            <thead>
                <tr>
                    <th> Başlık </th>
                    <th> Seo Başlık </th>
                    <th> Seo Açıklaması </th>
                    <th> Değişiklik Tarihi </th>
                    <th> Değişim Yapılan IP </th>
                    <th> Değişim Yapan Kullanıcı Id </th>
                    <th class="noExport"> İşlemler </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td> @item.Title </td>
                        <td> @item.SeoTitle  </td>
                        <td> @item.SeoDescription </td>
                        <td> @item.Date.ToString("g") </td>
                        <td> @item.ClientIp </td>
                        <td> @item.UserId </td>
                        <td>
                            @await Component.InvokeAsync("Link", new { viewName = "Default", vm = new LinkViewModel { Title = "Geri Al", ClassName = "btn-info btn", Href = "/admin/pagerevision/backup?id=" + item.Id } })
                            @await Component.InvokeAsync("Link", new { viewName = "Delete", vm = new LinkViewModel { Title = "Sil", DataId = item.Id, ClassName = "btn btn-danger", DataUrl = "/admin/page/delete" } })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @await Component.InvokeAsync("Link", new { viewName = "Default", vm = new LinkViewModel { IconClass = "",Title = "Geri Dön", Href = "/admin/page/list/" } })
        <div class="pagination-button">
            @{
                var prevDisabled = !Model.PreviousPage ? "disabled" : "";
                var nextDisabled = !Model.NextPage ? "disabled" : "";
            }
            <a asp-action="list" asp-route-pageNumber="@(Model.PageIndex - 1)"
               class="btn btn-secondary @prevDisabled">Geri</a>
            <a asp-action="list" asp-route-pageNumber="@(Model.PageIndex + 1)"
               class="btn btn-secondary @nextDisabled">İleri</a>
        </div>
    </div>
</div>